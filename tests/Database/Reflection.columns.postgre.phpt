<?php

/**
 * Test: Nette\Database\Connection: reflection
 * @dataProvider? databases.ini  postgresql
 */

declare(strict_types=1);

use Nette\Database\Type;
use Tester\Assert;

require __DIR__ . '/connect.inc.php'; // create $connection

Nette\Database\Helpers::loadFromFile($connection, __DIR__ . '/files/pgsql-nette_test3.sql');


$reflection = $connection->getReflection();
$columns = $reflection->getTable('types')->columns;

$expectedColumns = [
	'smallint' => [
		'name' => 'smallint',
		'table' => 'types',
		'type' => Type::Integer,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'integer' => [
		'name' => 'integer',
		'table' => 'types',
		'type' => Type::Integer,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'bigint' => [
		'name' => 'bigint',
		'table' => 'types',
		'type' => Type::Integer,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'numeric' => [
		'name' => 'numeric',
		'table' => 'types',
		'type' => Type::Decimal,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'real' => [
		'name' => 'real',
		'table' => 'types',
		'type' => Type::Float,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'double' => [
		'name' => 'double',
		'table' => 'types',
		'type' => Type::Float,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'money' => [
		'name' => 'money',
		'table' => 'types',
		'type' => Type::Decimal,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'bool' => [
		'name' => 'bool',
		'table' => 'types',
		'type' => Type::Boolean,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'date' => [
		'name' => 'date',
		'table' => 'types',
		'type' => Type::Date,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'time' => [
		'name' => 'time',
		'table' => 'types',
		'type' => Type::Time,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'timestamp' => [
		'name' => 'timestamp',
		'table' => 'types',
		'type' => Type::DateTime,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'timestampZone' => [
		'name' => 'timestampZone',
		'table' => 'types',
		'type' => Type::DateTime,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'interval' => [
		'name' => 'interval',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'character' => [
		'name' => 'character',
		'table' => 'types',
		'type' => Type::Text,
		'size' => 30,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'character_varying' => [
		'name' => 'character_varying',
		'table' => 'types',
		'type' => Type::Text,
		'size' => 30,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'text' => [
		'name' => 'text',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'tsquery' => [
		'name' => 'tsquery',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'tsvector' => [
		'name' => 'tsvector',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'uuid' => [
		'name' => 'uuid',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'xml' => [
		'name' => 'xml',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'cidr' => [
		'name' => 'cidr',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'inet' => [
		'name' => 'inet',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'macaddr' => [
		'name' => 'macaddr',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'bit' => [
		'name' => 'bit',
		'table' => 'types',
		'type' => Type::Text,
		'size' => -3,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'bit_varying' => [
		'name' => 'bit_varying',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'bytea' => [
		'name' => 'bytea',
		'table' => 'types',
		'type' => Type::Binary,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'box' => [
		'name' => 'box',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'circle' => [
		'name' => 'circle',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'lseg' => [
		'name' => 'lseg',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'path' => [
		'name' => 'path',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'point' => [
		'name' => 'point',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
	'polygon' => [
		'name' => 'polygon',
		'table' => 'types',
		'type' => Type::Text,
		'size' => null,
		'nullable' => true,
		'default' => null,
		'autoIncrement' => false,
		'primary' => false,
	],
];

Assert::same(
	$expectedColumns,
	array_map(fn($c) => [
		'name' => $c->name,
		'table' => $c->table->name,
		'type' => $c->type,
		'size' => $c->size,
		'nullable' => $c->nullable,
		'default' => $c->default,
		'autoIncrement' => $c->autoIncrement,
		'primary' => $c->primary,
	], $columns),
);
